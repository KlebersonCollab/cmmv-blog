class CMMVComments{constructor(e={}){this.options={container:e.container||null,postId:e.postId||null,apiBaseUrl:e.apiBaseUrl||"/api",authTokenName:e.authTokenName||"cmmv_auth_token",theme:e.theme||"light",placeholders:{commentInput:e.placeholders?.commentInput||"Write your comment here...",emptyComments:e.placeholders?.emptyComments||"Be the first to comment!",signInPrompt:e.placeholders?.signInPrompt||"You need to be logged in to leave a comment.",signInButton:e.placeholders?.signInButton||"Sign in to comment",postButton:e.placeholders?.postButton||"Post Comment",replyButton:e.placeholders?.replyButton||"Reply",editButton:e.placeholders?.editButton||"Edit",deleteButton:e.placeholders?.deleteButton||"Delete",cancelButton:e.placeholders?.cancelButton||"Cancel",updateButton:e.placeholders?.updateButton||"Update",submittingButton:e.placeholders?.submittingButton||"Submitting...",confirmDeleteMessage:e.placeholders?.confirmDeleteMessage||"Are you sure you want to delete this comment?"},onSignInClick:e.onSignInClick||this.defaultSignInRedirect.bind(this),onCommentSubmit:e.onCommentSubmit||null,onCommentLike:e.onCommentLike||null},this.state={isLoggedIn:!1,isSubmitting:!1,currentUser:null,comments:[],replyingTo:null,editingComment:null,showMainEmojiPicker:!1,showReplyEmojiPicker:!1,activeEmojiCommentId:null,showMentionSuggestions:!1,currentMention:"",mentionStartIndex:-1,newComment:{content:"",parentId:null},mentionUsers:[],filteredMentionUsers:[],isLoading:!1,isLoadingMore:!1,commentOffset:0,totalComments:0,hasMoreComments:!1,replyForms:new Set},this.commonEmojis=["😀","😊","👍","❤️","🎉","🔥","😂","👏","🙌","🤔","😍","🙏","👌","💯","🌟","👀","🤩","💪"],this.elements={container:null,commentForm:null,commentTextarea:null,emojiPicker:null,mentionSuggestions:null},this.init=this.init.bind(this),this.checkAuthStatus=this.checkAuthStatus.bind(this),this.fetchComments=this.fetchComments.bind(this),this.renderCommentSection=this.renderCommentSection.bind(this),this.editComment=this.editComment.bind(this),this.deleteComment=this.deleteComment.bind(this),this.handleReplySubmit=this.handleReplySubmit.bind(this),this.options.container&&this.options.postId&&this.init()}init(){this.handleSubmitComment=this.handleSubmitComment||function(){console.warn("handleSubmitComment not found")},this.handleTextareaInput=this.handleTextareaInput||function(){console.warn("handleTextareaInput not found")},this.toggleEmojiPicker=this.toggleEmojiPicker||function(){console.warn("toggleEmojiPicker not found")},this.cancelReply=this.cancelReply||function(){console.warn("cancelReply not found")},this.loadMoreComments=this.loadMoreComments||function(){console.warn("loadMoreComments not found")},this.loadMoreReplies=this.loadMoreReplies||function(){console.warn("loadMoreReplies not found")},"string"==typeof this.options.container?this.elements.container=document.querySelector(this.options.container):this.elements.container=this.options.container,this.elements.container&&(this.state.isLoading=!1,this.state.isLoadingMore=!1,this.state.commentOffset=0,this.state.totalComments=0,this.state.hasMoreComments=!1,this.checkAuthStatus(),this.fetchComments(),this.renderCommentSection(),document.addEventListener("click",(e=>{this.state.showEmojiPicker&&this.elements.emojiPicker&&(this.elements.emojiPicker.contains(e.target)||e.target===this.elements.emojiButton||(this.state.showEmojiPicker=!1,this.updateUI()))})))}defaultSignInRedirect(){const e=window.location.pathname+window.location.search;window.location.href=`/member/login?redirect=${encodeURIComponent(e)}`}checkAuthStatus(){let e=null;try{const t=sessionStorage.getItem("member"),n=localStorage.getItem("member"),s=t||n;s&&(e=JSON.parse(s))}catch(e){console.error("Error parsing auth data:",e)}return e&&e.token&&e.member&&e.member.name?(this.state.isLoggedIn=!0,this.state.currentUser={id:e.member.id,name:e.member.name,email:e.member.email,avatar:e.member.avatar||null}):(this.state.isLoggedIn=!1,this.state.currentUser=null),this.state.isLoggedIn}fetchComments(){this.state.isLoading=!0,this.updateUI();const e=`${this.options.apiBaseUrl}/blog/comments/${this.options.postId}?offset=0&sortBy=recent`;fetch(e).then((e=>{if(!e.ok)throw new Error(`Failed to fetch comments: ${e.status} ${e.statusText}`);return e.json()})).then((e=>{const t=e.result||{};this.state.comments=t.comments||[],this.state.totalComments=t.total||0,this.state.hasMoreComments=t.hasMore||!1,this.state.commentOffset=this.state.comments.length,this.state.isLoggedIn&&this.checkUserLikes(),this.updateMentionUsers(),this.state.isLoading=!1,this.updateUI()})).catch((e=>{console.error("Error fetching comments:",e),this.state.isLoading=!1,this.state.comments=[],this.updateUI()}))}async checkUserLikes(){if(!this.state.isLoggedIn||0===this.state.comments.length)return;const e=this.getAuthToken();if(e)try{const t=[];if(this.state.comments.forEach((e=>{t.push(e.id),e.replies&&e.replies.length>0&&e.replies.forEach((e=>{t.push(e.id)}))})),0===t.length)return;const n=new URL(`${this.options.apiBaseUrl}/blog/comments/hasLikeBulk`);t.forEach((e=>{n.searchParams.append("commentIds",e)}));const s=await fetch(n.toString(),{method:"GET",headers:{Authorization:`Bearer ${e}`}});if(!s.ok)throw new Error(`Failed to check likes: ${s.status} ${s.statusText}`);const o=await s.json(),i=(o.result||{}).likes||{};this.state.comments.forEach((e=>{e.hasLiked=!0===i[e.id],e.replies&&e.replies.forEach((e=>{e.hasLiked=!0===i[e.id]}))})),this.updateUI()}catch(e){console.error("Error checking likes:",e),this.checkLikesIndividually()}}async checkLikesIndividually(){if(!this.state.isLoggedIn||0===this.state.comments.length)return;const e=this.getAuthToken();if(e)try{const t=[];this.state.comments.forEach((e=>{t.push(e.id),e.replies&&e.replies.length>0&&e.replies.forEach((e=>{t.push(e.id)}))}));const n=t.map((t=>{const n=`${this.options.apiBaseUrl}/blog/comments/${t}/hasLike`;return fetch(n,{method:"GET",headers:{Authorization:`Bearer ${e}`}}).then((e=>e.ok?e.json().then((e=>{const n=e.result&&e.result.hasLike;return{commentId:t,hasLike:!0===n}})):{commentId:t,hasLike:!1})).catch((e=>(console.error("Error checking like for comment",t,e),{commentId:t,hasLike:!1})))})),s=await Promise.all(n),o={};s.forEach((e=>{o[e.commentId]=e.hasLike})),this.state.comments.forEach((e=>{e.hasLiked=!0===o[e.id],e.replies&&e.replies.forEach((e=>{e.hasLiked=!0===o[e.id]}))})),this.updateUI()}catch(e){console.error("Error checking likes (fallback):",e)}}loadMoreComments(){if(!this.state.hasMoreComments||this.state.isLoadingMore)return;this.state.isLoadingMore=!0,this.updateUI();const e=`${this.options.apiBaseUrl}/blog/comments/${this.options.postId}?offset=${this.state.commentOffset}&sortBy=recent`;fetch(e).then((e=>{if(!e.ok)throw new Error("Failed to load more comments");return e.json()})).then((e=>{const t=e.result||{};if(t.comments&&t.comments.length>0){const e=t.comments;this.state.comments=[...this.state.comments,...e],this.state.hasMoreComments=t.hasMore||!1,this.state.commentOffset=this.state.comments.length,this.state.isLoggedIn&&this.checkLikesForComments(e),this.updateMentionUsers()}this.state.isLoadingMore=!1,this.updateUI()})).catch((e=>{console.error("Error loading more comments:",e),this.state.isLoadingMore=!1,this.updateUI()}))}async checkLikesForComments(e){if(!this.state.isLoggedIn||!e||0===e.length)return;const t=this.getAuthToken();if(t)try{const n=[];e.forEach((e=>{n.push(e.id),e.replies&&e.replies.length>0&&e.replies.forEach((e=>{n.push(e.id)}))}));const s=n.map((e=>{const n=`${this.options.apiBaseUrl}/blog/comments/${e}/hasLike`;return fetch(n,{method:"GET",headers:{Authorization:`Bearer ${t}`}}).then((t=>t.ok?t.json().then((t=>{const n=t.result&&t.result.hasLike;return{commentId:e,hasLike:!0===n}})):{commentId:e,hasLike:!1})).catch((()=>({commentId:e,hasLike:!1})))})),o=await Promise.all(s),i={};o.forEach((e=>{i[e.commentId]=e.hasLike})),e.forEach((e=>{e.hasLiked=!0===i[e.id],e.replies&&e.replies.forEach((e=>{e.hasLiked=!0===i[e.id]}))}))}catch(e){console.error("Error checking likes for new comments:",e)}}loadMoreReplies(e){const t=this.findComment(e);if(!t||!t.hasMoreReplies||t.isLoadingReplies)return;t.isLoadingReplies=!0,this.updateUI();const n=t.replies?t.replies.length:0,s=`${this.options.apiBaseUrl}/blog/comments/${e}/replies?offset=${n}`;fetch(s).then((e=>{if(!e.ok)throw new Error("Failed to load more replies");return e.json()})).then((e=>{const n=e.result||{};if(n.replies&&n.replies.length>0){t.replies||(t.replies=[]);const e=n.replies;t.replies=[...t.replies,...e],t.hasMoreReplies=n.hasMore||!1,t.replyCount=n.total||t.replies.length,this.state.isLoggedIn&&this.checkLikesForReplies(e)}t.isLoadingReplies=!1,this.updateUI()})).catch((e=>{console.error("Error loading more replies:",e),t.isLoadingReplies=!1,this.updateUI()}))}async checkLikesForReplies(e){if(!this.state.isLoggedIn||!e||0===e.length)return;const t=this.getAuthToken();if(t)try{const n=e.map((e=>e.id)).map((e=>{const n=`${this.options.apiBaseUrl}/blog/comments/${e}/hasLike`;return fetch(n,{method:"GET",headers:{Authorization:`Bearer ${t}`}}).then((t=>t.ok?t.json().then((t=>{const n=t.result&&t.result.hasLike;return{commentId:e,hasLike:!0===n}})):{commentId:e,hasLike:!1})).catch((()=>({commentId:e,hasLike:!1})))})),s=await Promise.all(n),o={};s.forEach((e=>{o[e.commentId]=e.hasLike})),e.forEach((e=>{e.hasLiked=!0===o[e.id]}))}catch(e){console.error("Error checking likes for replies:",e)}}updateUI(){const e=document.activeElement,t=e&&e.classList.contains("comment-textarea");let n=null,s=null;t&&(n=e.selectionStart,s=e.selectionEnd),this.renderCommentSection(),t&&this.elements.commentTextarea&&(this.elements.commentTextarea.focus(),null!==n&&null!==s&&(this.elements.commentTextarea.selectionStart=n,this.elements.commentTextarea.selectionEnd=s))}renderCommentSection(){if(!this.elements.container)return;this.elements.container.innerHTML="";const e=document.createElement("div");e.className="comments-container mt-8 mb-12";const t=this.renderFormSection();e.appendChild(t);const n=this.getParentComments();if((n.length>0||this.state.isLoading)&&!this.state.isSubmitting){const t=this.renderCommentsListSection(n);e.appendChild(t)}else if(!this.state.isLoading&&0===n.length){const t=this.renderEmptyCommentsSection();e.appendChild(t)}"dark"===this.options.theme&&e.classList.add("dark"),this.elements.container.appendChild(e),this.initElementReferences()}initElementReferences(){try{this.elements.commentTextarea=this.elements.container.querySelector(".comment-textarea"),this.elements.commentForm=this.elements.container.querySelector(".comment-form"),this.elements.emojiPicker=this.elements.container.querySelector(".emoji-picker"),this.elements.emojiButton=this.elements.container.querySelector(".emoji-button"),this.elements.mentionSuggestions=this.elements.container.querySelector(".mention-suggestions"),this.elements.commentForm&&this.elements.commentForm.addEventListener("submit",this.handleSubmitComment.bind(this)),this.elements.commentTextarea&&this.elements.commentTextarea.addEventListener("input",this.handleTextareaInput.bind(this)),this.elements.emojiButton&&this.elements.emojiButton.addEventListener("click",this.toggleEmojiPicker.bind(this));this.elements.container.querySelectorAll(".emoji-item").forEach((e=>{e&&e.addEventListener("click",(()=>{const t=e.textContent.trim();this.insertEmoji(t)}))}));this.elements.container.querySelectorAll(".like-button").forEach((e=>{e&&e.addEventListener("click",(()=>{const t=e.getAttribute("data-comment-id");this.likeComment(t)}))}));this.elements.container.querySelectorAll(".reply-button").forEach((e=>{e&&e.addEventListener("click",(()=>{const t=e.getAttribute("data-comment-id"),n=e.getAttribute("data-reply-to");this.startReply(t,n)}))}));this.elements.container.querySelectorAll(".edit-button").forEach((e=>{e&&e.addEventListener("click",(()=>{const t=e.getAttribute("data-comment-id");this.startEditingComment(t)}))}));this.elements.container.querySelectorAll(".delete-button").forEach((e=>{e&&e.addEventListener("click",(()=>{const t=e.getAttribute("data-comment-id");confirm(this.options.placeholders.confirmDeleteMessage)&&this.deleteComment(t)}))}));this.elements.container.querySelectorAll(".cancel-edit-button").forEach((e=>{e&&e.addEventListener("click",(()=>{const t=e.getAttribute("data-comment-id");this.cancelEditingComment(t)}))}));this.elements.container.querySelectorAll(".update-comment-button").forEach((e=>{e&&e.addEventListener("click",(()=>{const t=e.getAttribute("data-comment-id"),n=e.closest(".comment");if(n){const e=n.querySelector(".edit-comment-textarea");if(e){const n=e.value.trim();n&&this.editComment(t,n)}}}))}));this.elements.container.querySelectorAll(".inline-reply-form").forEach((e=>{e&&e.addEventListener("submit",(t=>{t.preventDefault();const n=e.getAttribute("data-parent-id"),s=e.querySelector(".inline-reply-textarea");s&&s.value.trim()&&this.handleReplySubmit(n,s.value.trim())}))}));this.elements.container.querySelectorAll(".cancel-inline-reply-button").forEach((e=>{e&&e.addEventListener("click",(()=>{const t=e.getAttribute("data-comment-id");this.cancelInlineReply(t)}))}));this.elements.container.querySelectorAll(".reply-emoji-button").forEach((e=>{e&&e.addEventListener("click",(t=>{const n=e.getAttribute("data-comment-id");this.toggleReplyEmojiPicker(n,t)}))}));this.elements.container.querySelectorAll(".reply-emoji-item").forEach((e=>{e&&e.addEventListener("click",(()=>{const t=e.getAttribute("data-comment-id"),n=e.getAttribute("data-emoji");this.insertReplyEmoji(t,n)}))}))}catch(e){console.error("Error in initElementReferences:",e)}}renderFormSection(){const e=document.createElement("div");e.className="mb-8";const t=document.createElement("h3");if(t.className="text-xl font-bold text-neutral-800 dark:text-white mb-4",t.textContent="Leave a comment",e.appendChild(t),this.state.isLoggedIn){const t=document.createElement("form");t.className="comment-form";const n=`\n                <div class="relative">\n                    <label for="comment" class="block text-sm font-medium text-neutral-700 dark:text-neutral-300 mb-1">Comment <span class="text-red-500">*</span></label>\n                    <div class="relative">\n                        <textarea\n                            id="comment"\n                            class="comment-textarea w-full px-3 py-2 bg-white dark:bg-neutral-700 border border-neutral-300 dark:border-neutral-600 rounded-md text-neutral-800 dark:text-white text-sm focus:ring-blue-500 focus:border-blue-500"\n                            placeholder="${this.options.placeholders.commentInput}"\n                            required\n                            rows="4"\n                        >${this.state.newComment.content}</textarea>\n\n                        ${this.renderMentionSuggestions()}\n                    </div>\n\n                    <div class="flex justify-between mt-2">\n                        <button\n                            type="button"\n                            class="emoji-button text-neutral-500 dark:text-neutral-400 hover:text-neutral-700 dark:hover:text-neutral-300"\n                        >\n                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">\n                                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM7 9a1 1 0 100-2 1 1 0 000 2zm7-1a1 1 0 11-2 0 1 1 0 012 0zm-7.536 5.879a1 1 0 001.415 0 3 3 0 014.242 0 1 1 0 001.415-1.415 5 5 0 00-7.072 0 1 1 0 000 1.415z" clip-rule="evenodd" />\n                            </svg>\n                        </button>\n\n                        <div class="text-xs text-neutral-500 dark:text-neutral-400">\n                            ${this.state.replyingTo?`\n                                <span>Replying to ${this.state.replyingTo.name}</span>\n                                <button\n                                    type="button"\n                                    class="cancel-reply-button ml-2 text-blue-600 dark:text-blue-400 hover:underline"\n                                >\n                                    Cancel\n                                </button>\n                            `:""}\n                        </div>\n                    </div>\n\n                    ${this.renderEmojiPicker()}\n                </div>\n\n                <div class="mt-4 flex justify-end">\n                    <button\n                        type="submit"\n                        class="px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-md text-sm font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50"\n                        ${this.state.isSubmitting?"disabled":""}\n                    >\n                        ${this.state.isSubmitting?`\n                            <span class="flex items-center">\n                                <svg class="animate-spin -ml-1 mr-2 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">\n                                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>\n                                    <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>\n                                </svg>\n                                ${this.options.placeholders.submittingButton}\n                            </span>\n                        `:this.options.placeholders.postButton}\n                    </button>\n                </div>\n            `;t.innerHTML=n,e.appendChild(t)}else{const t=document.createElement("div");t.className="bg-neutral-50 dark:bg-neutral-800 p-6 rounded-lg text-center mb-6 border border-neutral-200 dark:border-neutral-700";const n=document.createElement("p");n.className="text-neutral-600 dark:text-neutral-400 mb-4",n.textContent=this.options.placeholders.signInPrompt,t.appendChild(n);const s=document.createElement("a");s.className="inline-block px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-md text-sm font-medium transition-colors",s.textContent=this.options.placeholders.signInButton,s.href="#",s.addEventListener("click",(e=>{e.preventDefault(),"function"==typeof this.options.onSignInClick&&this.options.onSignInClick()})),t.appendChild(s),e.appendChild(t)}return e}renderEmojiPicker(){if(!this.state.showMainEmojiPicker)return"";let e="";return this.commonEmojis.forEach((t=>{e+=`\n                <button\n                    type="button"\n                    class="emoji-item w-8 h-8 flex items-center justify-center hover:bg-neutral-100 dark:hover:bg-neutral-700 rounded transition-colors text-lg"\n                >\n                    ${t}\n                </button>\n            `})),`\n            <div class="emoji-picker absolute z-10 mt-1 left-0">\n                <div class="bg-white dark:bg-neutral-800 rounded-md shadow-lg border border-neutral-200 dark:border-neutral-700 p-2">\n                    <div class="grid grid-cols-8 gap-1">\n                        ${e}\n                    </div>\n                </div>\n            </div>\n        `}toggleEmojiPicker(e){if(e&&(e.preventDefault(),e.stopPropagation()),!this.state)return void console.error("State object is undefined");this.state.showReplyEmojiPicker&&(this.state.showReplyEmojiPicker=!1,this.state.activeEmojiCommentId=null),this.state.showMainEmojiPicker=!this.state.showMainEmojiPicker,console.log("Main emoji picker toggled:",this.state.showMainEmojiPicker),this.state.showMainEmojiPicker&&(this.state.showMentionSuggestions=!1);const t=document.activeElement,n=t&&t.classList.contains("comment-textarea"),s=n?t.selectionStart:null,o=n?t.selectionEnd:null;this.updateUI(),n&&this.elements.commentTextarea&&(this.elements.commentTextarea.focus(),null!==s&&null!==o&&(this.elements.commentTextarea.selectionStart=s,this.elements.commentTextarea.selectionEnd=o))}renderMentionSuggestions(){if(!this.state.showMentionSuggestions||0===this.state.filteredMentionUsers.length)return"";let e="";return this.state.filteredMentionUsers.forEach((t=>{e+=`\n                <div\n                    class="mention-item px-4 py-2 hover:bg-neutral-100 dark:hover:bg-neutral-700 cursor-pointer text-neutral-800 dark:text-neutral-200 text-sm"\n                    data-user-id="${t.id}"\n                    data-user-name="${t.name}"\n                >\n                    ${t.name}\n                </div>\n            `})),`\n            <div class="mention-suggestions absolute z-10 mt-1 bg-white dark:bg-neutral-800 rounded-md shadow-lg border border-neutral-200 dark:border-neutral-700 max-h-60 overflow-y-auto">\n                ${e}\n            </div>\n        `}renderCommentsListSection(e){const t=document.createElement("div"),n=document.createElement("h3");if(n.className="text-xl font-bold text-neutral-800 dark:text-white mb-4",n.textContent=`${this.state.totalComments||this.state.comments.length} Comments`,t.appendChild(n),this.state.isLoading){const e=document.createElement("div");return e.className="text-center py-8",e.innerHTML='\n                <div class="inline-block animate-spin h-8 w-8 border-4 border-blue-500 border-t-transparent rounded-full"></div>\n                <p class="mt-2 text-neutral-600 dark:text-neutral-400">Loading comments...</p>\n            ',t.appendChild(e),t}const s=document.createElement("div");if(s.className="space-y-6",e.forEach((e=>{try{const t=this.renderComment(e);s.appendChild(t)}catch(e){const t=document.createElement("div");t.className="bg-red-50 dark:bg-red-900 p-3 rounded-lg text-red-600 dark:text-red-300",t.textContent="Error rendering this comment",s.appendChild(t)}})),this.state.hasMoreComments){const e=document.createElement("div");e.className="text-center mt-6";const t=document.createElement("button");t.className="px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-md text-sm font-medium transition-colors",t.textContent=this.state.isLoadingMore?"Loading...":"Load More Comments",t.disabled=this.state.isLoadingMore,t.addEventListener("click",this.loadMoreComments.bind(this)),e.appendChild(t),s.appendChild(e)}return t.appendChild(s),t}renderComment(e){if(!e||"object"!=typeof e)throw new Error("Invalid comment object");const t=document.createElement("div");t.className="comment mb-4",t.setAttribute("data-comment-id",e.id||"unknown");const n=this.state.isLoggedIn&&this.state.currentUser&&e.member===this.state.currentUser.id,s=this.state.editingComment===e.id,o=this.state.replyForms.has(e.id),i=null===e.likes||void 0===e.likes?0:e.likes,r=e.memberInfo||{},a=r.name||e.name||"Anonymous";if(t.innerHTML=s?`\n                <div class="bg-neutral-100 dark:bg-neutral-800 rounded-lg p-4 shadow-sm border-l-4 border-yellow-500 dark:border-yellow-600">\n                    <div class="flex items-start">\n                        \x3c!-- Comment Avatar --\x3e\n                        <div class="flex-shrink-0 mr-3">\n                            <div class="w-10 h-10 rounded-full overflow-hidden bg-blue-600 dark:bg-blue-700 flex items-center justify-center text-white shadow-sm">\n                                ${r&&r.avatar?`<img src="${r.avatar}" alt="${a}" class="w-full h-full object-cover" />`:`<span class="font-bold text-sm">${this.getInitials(a)}</span>`}\n                            </div>\n                        </div>\n\n                        \x3c!-- Comment Edit Form --\x3e\n                        <div class="flex-1 min-w-0">\n                            <div class="mb-2">\n                                <textarea\n                                    class="edit-comment-textarea w-full px-3 py-2 bg-white dark:bg-neutral-700 border border-neutral-300 dark:border-neutral-600 rounded-md text-neutral-800 dark:text-white text-sm focus:ring-blue-500 focus:border-blue-500"\n                                    rows="3"\n                                >${e.content||""}</textarea>\n                            </div>\n\n                            <div class="flex justify-end space-x-2">\n                                <button\n                                    type="button"\n                                    class="cancel-edit-button px-3 py-1 bg-neutral-200 hover:bg-neutral-300 dark:bg-neutral-700 dark:hover:bg-neutral-600 text-neutral-800 dark:text-white rounded-md text-xs font-medium transition-colors"\n                                    data-comment-id="${e.id}"\n                                >\n                                    Cancel\n                                </button>\n                                <button\n                                    type="button"\n                                    class="update-comment-button px-3 py-1 bg-blue-600 hover:bg-blue-700 text-white rounded-md text-xs font-medium transition-colors"\n                                    data-comment-id="${e.id}"\n                                >\n                                    Update\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            `:`\n                <div class="bg-neutral-100 dark:bg-neutral-800 rounded-lg p-4 shadow-sm border-l-4 border-blue-500 dark:border-blue-700">\n                    <div class="flex items-start">\n                        \x3c!-- Comment Avatar --\x3e\n                        <div class="flex-shrink-0 mr-3">\n                            <div class="w-10 h-10 rounded-full overflow-hidden bg-blue-600 dark:bg-blue-700 flex items-center justify-center text-white shadow-sm">\n                                ${r&&r.avatar?`<img src="${r.avatar}" alt="${a}" class="w-full h-full object-cover" />`:`<span class="font-bold text-sm">${this.getInitials(a)}</span>`}\n                            </div>\n                        </div>\n\n                        \x3c!-- Comment Content --\x3e\n                        <div class="flex-1 min-w-0">\n                            <div class="flex items-center mb-1">\n                                <h4 class="font-bold text-neutral-800 dark:text-white text-sm mr-2">${a}</h4>\n                                <span class="text-xs text-neutral-500 dark:text-neutral-400">${this.formatDate(e.createdAt)}</span>\n                                ${e.editedAt?'<span class="text-xs text-neutral-500 dark:text-neutral-400 ml-2">(edited)</span>':""}\n                            </div>\n\n                            <div class="text-neutral-700 dark:text-neutral-300 text-sm mb-2 break-words">${this.formatCommentText(e.content||"")}</div>\n\n                            <div class="flex items-center text-xs mt-2 pt-2 border-t border-neutral-200 dark:border-neutral-700">\n                                <button\n                                    class="like-button flex items-center text-neutral-500 dark:text-neutral-400 hover:text-blue-600 dark:hover:text-blue-400 ${e.hasLiked?"text-blue-600 dark:text-blue-400":""}"\n                                    data-comment-id="${e.id}"\n                                >\n                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1 ${e.hasLiked?"fill-current":""}" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 10h4.764a2 2 0 011.789 2.894l-3.5 7A2 2 0 0115.263 21h-4.017c-.163 0-.326-.02-.485-.06L7 20m7-10V5a2 2 0 00-2-2h-.095c-.5 0-.905.405-.905.905 0 .714-.211 1.412-.608 2.006L7 11v9m7-10h-2M7 20H5a2 2 0 01-2-2v-6a2 2 0 012-2h2.5" />\n                                    </svg>\n                                    <span>${i} Like${1!==i?"s":""}</span>\n                                </button>\n\n                                <button\n                                    class="reply-button ml-4 flex items-center text-neutral-500 dark:text-neutral-400 hover:text-blue-600 dark:hover:text-blue-400"\n                                    data-comment-id="${e.id}"\n                                >\n                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6" />\n                                    </svg>\n                                    <span>Reply</span>\n                                </button>\n\n                                ${n?`\n                                <button\n                                    class="edit-button ml-4 flex items-center text-neutral-500 dark:text-neutral-400 hover:text-blue-600 dark:hover:text-blue-400"\n                                    data-comment-id="${e.id}"\n                                >\n                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />\n                                    </svg>\n                                    <span>Edit</span>\n                                </button>\n\n                                <button\n                                    class="delete-button ml-4 flex items-center text-neutral-500 dark:text-neutral-400 hover:text-red-600 dark:hover:text-red-400"\n                                    data-comment-id="${e.id}"\n                                >\n                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />\n                                    </svg>\n                                    <span>Delete</span>\n                                </button>\n                                `:""}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            `,o&&!s){const n=document.createElement("div");n.className="reply-form-container ml-6 mt-4",n.innerHTML=`\n                <div class="bg-neutral-50 dark:bg-neutral-700 rounded-lg p-4 shadow-sm border-l-4 border-green-500 dark:border-green-600">\n                    <div class="flex items-start">\n                        \x3c!-- User Avatar --\x3e\n                        <div class="flex-shrink-0 mr-3">\n                            <div class="w-8 h-8 rounded-full overflow-hidden bg-blue-600 dark:bg-blue-700 flex items-center justify-center text-white shadow-sm">\n                                ${this.state.currentUser&&this.state.currentUser.avatar?`<img src="${this.state.currentUser.avatar}" alt="${this.state.currentUser.name}" class="w-full h-full object-cover" />`:`<span class="font-bold text-xs">${this.getInitials(this.state.currentUser?.name||"")}</span>`}\n                            </div>\n                        </div>\n\n                        \x3c!-- Reply Form --\x3e\n                        <div class="flex-1 min-w-0">\n                            <form class="inline-reply-form" data-parent-id="${e.id}">\n                                <div class="mb-2 relative">\n                                    <textarea\n                                        class="inline-reply-textarea w-full px-3 py-2 bg-white dark:bg-neutral-600 border border-neutral-300 dark:border-neutral-500 rounded-md text-neutral-800 dark:text-white text-sm focus:ring-blue-500 focus:border-blue-500"\n                                        placeholder="Write your reply here..."\n                                        rows="3"\n                                        required\n                                    ></textarea>\n\n                                    ${this.state.showReplyEmojiPicker&&this.state.activeEmojiCommentId===e.id?this.renderReplyEmojiPicker(e.id):""}\n                                </div>\n\n                                <div class="flex justify-between mt-2">\n                                    <button\n                                        type="button"\n                                        class="reply-emoji-button text-neutral-500 dark:text-neutral-400 hover:text-neutral-700 dark:hover:text-neutral-300"\n                                        data-comment-id="${e.id}"\n                                    >\n                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">\n                                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM7 9a1 1 0 100-2 1 1 0 000 2zm7-1a1 1 0 11-2 0 1 1 0 012 0zm-7.536 5.879a1 1 0 001.415 0 3 3 0 014.242 0 1 1 0 001.415-1.415 5 5 0 00-7.072 0 1 1 0 000 1.415z" clip-rule="evenodd" />\n                                        </svg>\n                                    </button>\n                                    <div>\n                                        <button\n                                            type="button"\n                                            class="cancel-inline-reply-button px-3 py-1 bg-neutral-200 hover:bg-neutral-300 dark:bg-neutral-700 dark:hover:bg-neutral-600 text-neutral-800 dark:text-white rounded-md text-xs font-medium transition-colors mr-2"\n                                            data-comment-id="${e.id}"\n                                        >\n                                            Cancel\n                                        </button>\n                                        <button\n                                            type="submit"\n                                            class="submit-inline-reply-button px-3 py-1 bg-blue-600 hover:bg-blue-700 text-white rounded-md text-xs font-medium transition-colors"\n                                        >\n                                            Reply\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            `,t.appendChild(n)}if(e.replies&&e.replies.length>0){const n=document.createElement("div");if(n.className="ml-10 mt-4 space-y-3 border-l-2 border-neutral-200 dark:border-neutral-700 pl-4",e.replies.forEach((t=>{const s=document.createElement("div");s.className="bg-neutral-50 dark:bg-neutral-900 rounded-lg p-3 shadow-sm",s.setAttribute("data-comment-id",t.id);const o=this.state.isLoggedIn&&this.state.currentUser&&t.member===this.state.currentUser.id,i=this.state.editingComment===t.id,r=null===t.likes||void 0===t.likes?0:t.likes;s.innerHTML=i?`\n                        <div class="flex items-start">\n                            \x3c!-- Reply Avatar --\x3e\n                            <div class="flex-shrink-0 mr-3">\n                                <div class="w-8 h-8 rounded-full overflow-hidden bg-blue-600 dark:bg-blue-700 flex items-center justify-center text-white shadow-sm">\n                                    ${t.memberInfo&&t.memberInfo.avatar?`<img src="${t.memberInfo.avatar}" alt="${t.memberInfo?.name||t.name}" class="w-full h-full object-cover" />`:`<span class="font-bold text-xs">${this.getInitials(t.memberInfo?.name||t.name)}</span>`}\n                                </div>\n                            </div>\n\n                            \x3c!-- Reply Edit Form --\x3e\n                            <div class="flex-1 min-w-0">\n                                <div class="mb-2">\n                                    <textarea\n                                        class="edit-comment-textarea w-full px-3 py-2 bg-white dark:bg-neutral-700 border border-neutral-300 dark:border-neutral-600 rounded-md text-neutral-800 dark:text-white text-sm focus:ring-blue-500 focus:border-blue-500"\n                                        rows="3"\n                                    >${t.content||""}</textarea>\n                                </div>\n\n                                <div class="flex justify-end space-x-2">\n                                    <button\n                                        type="button"\n                                        class="cancel-edit-button px-3 py-1 bg-neutral-200 hover:bg-neutral-300 dark:bg-neutral-700 dark:hover:bg-neutral-600 text-neutral-800 dark:text-white rounded-md text-xs font-medium transition-colors"\n                                        data-comment-id="${t.id}"\n                                    >\n                                        Cancel\n                                    </button>\n                                    <button\n                                        type="button"\n                                        class="update-comment-button px-3 py-1 bg-blue-600 hover:bg-blue-700 text-white rounded-md text-xs font-medium transition-colors"\n                                        data-comment-id="${t.id}"\n                                    >\n                                        Update\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    `:`\n                        <div class="flex items-start">\n                            \x3c!-- Reply Avatar --\x3e\n                            <div class="flex-shrink-0 mr-3">\n                                <div class="w-8 h-8 rounded-full overflow-hidden bg-blue-600 dark:bg-blue-700 flex items-center justify-center text-white shadow-sm">\n                                    ${t.memberInfo&&t.memberInfo.avatar?`<img src="${t.memberInfo.avatar}" alt="${t.memberInfo?.name||t.name}" class="w-full h-full object-cover" />`:`<span class="font-bold text-xs">${this.getInitials(t.memberInfo?.name||t.name)}</span>`}\n                                </div>\n                            </div>\n\n                            \x3c!-- Reply Content --\x3e\n                            <div class="flex-1 min-w-0">\n                                <div class="flex items-center mb-1">\n                                    <h4 class="font-bold text-neutral-800 dark:text-white text-sm mr-2">${t.memberInfo?.name||t.name}</h4>\n                                    <span class="text-xs text-neutral-500 dark:text-neutral-400">${this.formatDate(t.createdAt)}</span>\n                                    ${t.editedAt?'<span class="text-xs text-neutral-500 dark:text-neutral-400 ml-2">(edited)</span>':""}\n                                </div>\n\n                                <div class="text-neutral-700 dark:text-neutral-300 text-sm mb-2 break-words">${this.formatCommentText(t.content||"")}</div>\n\n                                <div class="flex items-center text-xs mt-1 pt-1 border-t border-neutral-200 dark:border-neutral-700">\n                                    <button\n                                        class="like-button flex items-center text-neutral-500 dark:text-neutral-400 hover:text-blue-600 dark:hover:text-blue-400 ${t.hasLiked?"text-blue-600 dark:text-blue-400":""}"\n                                        data-comment-id="${t.id}"\n                                    >\n                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1 ${t.hasLiked?"fill-current":""}" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 10h4.764a2 2 0 011.789 2.894l-3.5 7A2 2 0 0115.263 21h-4.017c-.163 0-.326-.02-.485-.06L7 20m7-10V5a2 2 0 00-2-2h-.095c-.5 0-.905.405-.905.905 0 .714-.211 1.412-.608 2.006L7 11v9m7-10h-2M7 20H5a2 2 0 01-2-2v-6a2 2 0 012-2h2.5" />\n                                        </svg>\n                                        <span>${r} Like${1!==r?"s":""}</span>\n                                    </button>\n\n                                    <button\n                                        class="reply-button ml-4 flex items-center text-neutral-500 dark:text-neutral-400 hover:text-blue-600 dark:hover:text-blue-400"\n                                        data-comment-id="${e.id}"\n                                        data-reply-to="${t.id}"\n                                    >\n                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6" />\n                                        </svg>\n                                        <span>Reply</span>\n                                    </button>\n\n                                    ${o?`\n                                    <button\n                                        class="edit-button ml-4 flex items-center text-neutral-500 dark:text-neutral-400 hover:text-blue-600 dark:hover:text-blue-400"\n                                        data-comment-id="${t.id}"\n                                    >\n                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />\n                                        </svg>\n                                        <span>Edit</span>\n                                    </button>\n\n                                    <button\n                                        class="delete-button ml-4 flex items-center text-neutral-500 dark:text-neutral-400 hover:text-red-600 dark:hover:text-red-400"\n                                        data-comment-id="${t.id}"\n                                    >\n                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />\n                                        </svg>\n                                        <span>Delete</span>\n                                    </button>\n                                    `:""}\n                                </div>\n                            </div>\n                        </div>\n                    `,n.appendChild(s)})),e.hasMoreReplies){const t=document.createElement("div");t.className="text-center mt-4";const s=document.createElement("button");s.className="text-sm text-blue-600 dark:text-blue-400 hover:underline",s.textContent=e.isLoadingReplies?"Loading...":`Show more replies (${e.replyCount-e.replies.length} more)`,s.disabled=e.isLoadingReplies,s.addEventListener("click",(()=>this.loadMoreReplies(e.id))),t.appendChild(s),n.appendChild(t)}t.appendChild(n)}return t}renderEmptyCommentsSection(){const e=document.createElement("div");if(this.state.isLoading)e.className="text-center py-8",e.innerHTML='\n                <div class="inline-block animate-spin h-8 w-8 border-4 border-blue-500 border-t-transparent rounded-full"></div>\n                <p class="mt-2 text-neutral-600 dark:text-neutral-400">Loading comments...</p>\n            ';else{e.className="bg-neutral-50 dark:bg-neutral-800 p-6 rounded-lg text-center";const t=document.createElement("p");t.className="text-neutral-600 dark:text-neutral-400",t.textContent=this.options.placeholders.emptyComments,e.appendChild(t)}return e}handleSubmitComment(e){if(e&&e.preventDefault(),this.state.isSubmitting||!this.state.isLoggedIn)return;if(!this.elements.commentTextarea)return void console.error("Comment textarea not found");const t=this.elements.commentTextarea.value.trim();t&&this.submitComment(t)}async submitComment(e){try{this.state.isSubmitting=!0,this.updateUI();let t=null,n=null;try{const e=sessionStorage.getItem("member"),s=localStorage.getItem("member"),o=e||s;o&&(n=JSON.parse(o),t=n.token)}catch(e){return console.error("Error getting auth token:",e),void alert("Authentication error. Please log in again.")}if(!t)return alert("You must be logged in to comment."),this.state.isSubmitting=!1,void this.updateUI();let s=`${this.options.apiBaseUrl}/blog/comments/${this.options.postId}`;const o=new URLSearchParams;this.state.replyingTo&&(this.state.replyingTo.parentId?(o.append("parentId",this.state.replyingTo.parentId),o.append("inReplyTo",this.state.replyingTo.id)):o.append("parentId",this.state.replyingTo.id));const i=o.toString();i&&(s+=`?${i}`);const r={method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify({content:e})},a=await fetch(s,r);if(!a.ok){const e=await a.json();throw new Error(e.message||"Failed to submit comment")}const l=await a.json(),m=l.result||l;if("function"==typeof this.options.onCommentSubmit&&this.options.onCommentSubmit(m),m&&m.id)this.state.comments.push(m);else{const t={id:Math.random().toString(36).substring(2,10),name:this.state.currentUser.name,email:this.state.currentUser.email,content:e,parentId:this.state.replyingTo?this.state.replyingTo.id:null,createdAt:(new Date).toISOString(),updatedAt:(new Date).toISOString(),likes:0,hasLiked:!1,avatar:this.state.currentUser.avatar};this.state.comments.push(t)}this.state.newComment.content="",this.elements.commentTextarea&&(this.elements.commentTextarea.value=""),this.state.replyingTo=null,this.state.newComment.parentId=null,this.updateMentionUsers()}catch(e){console.error("Error submitting comment:",e),alert("Failed to submit comment: "+(e.message||"Unknown error"))}finally{this.state.isSubmitting=!1,this.updateUI()}}async likeComment(e){if(!this.state.isLoggedIn)return void("function"==typeof this.options.onSignInClick&&this.options.onSignInClick());const t=this.findComment(e);if(t)try{const n=this.getAuthToken();if(!n)return void alert("You must be logged in to like comments.");const s=!t.hasLiked;t.hasLiked=s,t.likes=(t.likes||0)+(s?1:-1),this.updateUI();const o=s?"like":"unlike",i=`${this.options.apiBaseUrl}/blog/comments/${e}/${o}`,r={method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`}},a=await fetch(i,r);if(!a.ok){t.hasLiked=!s,t.likes=(t.likes||0)+(s?-1:1),this.updateUI();const e=await a.json();throw new Error(e.message||`Failed to ${s?"like":"unlike"} comment`)}"function"==typeof this.options.onCommentLike&&this.options.onCommentLike(e,s)}catch(e){console.error(`Error ${t.hasLiked?"liking":"unliking"} comment:`,e)}}startReply(e,t){if(!this.state.isLoggedIn)return void("function"==typeof this.options.onSignInClick&&this.options.onSignInClick());const n=this.findComment(e);if(n){if(this.state.replyForms.add(e),t){const n=this.findComment(t);n&&(this.state.replyingTo={id:t,parentId:e,name:n.memberInfo?.name||n.name})}else this.state.replyingTo={id:e,parentId:null,name:n.memberInfo?.name||n.name};this.updateUI(),setTimeout((()=>{const t=this.elements.container.querySelector(`.reply-form-container[data-parent-id="${e}"] .inline-reply-textarea`);t&&t.focus()}),100)}}cancelInlineReply(e){this.state.replyForms.delete(e),this.state.replyingTo&&this.state.replyingTo.id===e&&(this.state.replyingTo=null),this.updateUI()}async handleReplySubmit(e,t){if(this.state.isLoggedIn&&t&&e)try{const n=this.getAuthToken();if(!n)return void alert("You must be logged in to comment.");let s=`${this.options.apiBaseUrl}/blog/comments/${this.options.postId}`;const o=new URLSearchParams;o.append("parentId",e),this.state.replyingTo&&this.state.replyingTo.id!==e&&o.append("inReplyTo",this.state.replyingTo.id),s+=`?${o.toString()}`;const i={method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify({content:t})},r=await fetch(s,i);if(!r.ok){const e=await r.json();throw new Error(e.message||"Failed to submit reply")}const a=await r.json(),l=a.result||a;"function"==typeof this.options.onCommentSubmit&&this.options.onCommentSubmit(l);const m=this.findComment(e);m&&(m.replies||(m.replies=[]),m.replies.unshift(l),m.replyCount=(m.replyCount||0)+1),this.state.replyForms.delete(e),this.state.replyingTo=null,this.updateUI()}catch(e){console.error("Error submitting reply:",e),alert("Failed to submit reply: "+(e.message||"Unknown error"))}}getAuthToken(){try{const e=sessionStorage.getItem("member"),t=localStorage.getItem("member"),n=e||t;if(n){return JSON.parse(n).token}}catch(e){console.error("Error getting auth token:",e)}return null}startEditingComment(e){this.state.editingComment=e,this.updateUI(),setTimeout((()=>{const t=this.elements.container.querySelector(`[data-comment-id="${e}"] .edit-comment-textarea`);t&&(t.focus(),t.selectionStart=t.value.length,t.selectionEnd=t.value.length)}),100)}cancelEditingComment(e){this.state.editingComment=null,this.updateUI()}async editComment(e,t){if(this.state.isLoggedIn&&t)try{const n=this.getAuthToken();if(!n)return void alert("You must be logged in to edit this comment.");const s=`${this.options.apiBaseUrl}/blog/comments/${e}`,o={method:"PUT",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify({content:t})},i=await fetch(s,o);if(!i.ok){const e=await i.json();throw new Error(e.message||"Failed to edit comment")}const r=await i.json(),a=(r.result,this.findComment(e));a&&(a.content=t,a.updatedAt=(new Date).toISOString(),a.editedAt=(new Date).toISOString()),this.state.editingComment=null,this.updateUI()}catch(e){console.error("Error editing comment:",e),alert("Failed to edit comment: "+(e.message||"Unknown error"))}}async deleteComment(e){if(this.state.isLoggedIn)try{const t=this.getAuthToken();if(!t)return void alert("You must be logged in to delete this comment.");const n=`${this.options.apiBaseUrl}/blog/comments/${e}`,s={method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`}},o=await fetch(n,s);if(!o.ok){const e=await o.json();throw new Error(e.message||"Failed to delete comment")}this.removeCommentFromState(e),this.updateUI()}catch(e){console.error("Error deleting comment:",e),alert("Failed to delete comment: "+(e.message||"Unknown error"))}}removeCommentFromState(e){const t=this.state.comments.findIndex((t=>t.id===e));if(-1===t){for(const t of this.state.comments)if(t.replies&&t.replies.length>0){const n=t.replies.findIndex((t=>t.id===e));if(-1!==n)return t.replies.splice(n,1),void(t.replyCount=(t.replyCount||1)-1)}}else this.state.comments.splice(t,1)}formatDate(e){if(!e)return"";const t=new Date(e),n=(new Date).getTime()-t.getTime(),s=Math.floor(n/1e3),o=Math.floor(s/60),i=Math.floor(o/60),r=Math.floor(i/24);return s<60?"just now":o<60?`${o} minute${1!==o?"s":""} ago`:i<24?`${i} hour${1!==i?"s":""} ago`:r<7?`${r} day${1!==r?"s":""} ago`:new Intl.DateTimeFormat("en-US",{year:"numeric",month:"short",day:"numeric"}).format(t)}getInitials(e){return e?e.split(" ").map((e=>e[0])).join("").substring(0,2).toUpperCase():"?"}formatCommentText(e){return e?e=(e=e.replace(/@(\w+)/g,'<span class="text-blue-600 dark:text-blue-400">@$1</span>')).replace(/(https?:\/\/[^\s]+)/g,'<a href="$1" target="_blank" rel="noopener noreferrer" class="text-blue-600 dark:text-blue-400 hover:underline">$1</a>'):""}updateMentionUsers(){const e=new Map;this.state.comments.forEach((t=>{e.has(t.id)||e.set(t.id,{id:t.id,name:t.name,email:t.email})})),this.state.mentionUsers=Array.from(e.values()),this.updateFilteredMentionUsers()}updateFilteredMentionUsers(){if(!this.state.currentMention)return void(this.state.filteredMentionUsers=[]);const e=this.state.currentMention.toLowerCase();this.state.filteredMentionUsers=this.state.mentionUsers.filter((t=>t.name.toLowerCase().includes(e)))}getParentComments(){return this.state.comments.filter((e=>!e.parentId))}getReplies(e){return this.state.comments.filter((t=>t.parentId===e))}findComment(e){const t=this.state.comments.find((t=>t.id===e));if(t)return t;for(const t of this.state.comments)if(t.replies&&t.replies.length>0){const n=t.replies.find((t=>t.id===e));if(n)return n}return null}renderReplyEmojiPicker(e){if(!this.state.showReplyEmojiPicker||this.state.activeEmojiCommentId!==e)return"";let t="";return this.commonEmojis.forEach((n=>{t+=`\n                <button\n                    type="button"\n                    class="reply-emoji-item w-8 h-8 flex items-center justify-center hover:bg-neutral-100 dark:hover:bg-neutral-700 rounded transition-colors text-lg"\n                    data-emoji="${n}"\n                    data-comment-id="${e}"\n                >\n                    ${n}\n                </button>\n            `})),`\n            <div class="reply-emoji-picker absolute z-10 left-0 mt-1">\n                <div class="bg-white dark:bg-neutral-800 rounded-md shadow-lg border border-neutral-200 dark:border-neutral-700 p-2">\n                    <div class="grid grid-cols-8 gap-1">\n                        ${t}\n                    </div>\n                </div>\n            </div>\n        `}toggleReplyEmojiPicker(e,t){t&&(t.preventDefault(),t.stopPropagation()),this.state.showMainEmojiPicker&&(this.state.showMainEmojiPicker=!1),this.state.activeEmojiCommentId===e&&this.state.showReplyEmojiPicker?(this.state.showReplyEmojiPicker=!1,this.state.activeEmojiCommentId=null):(this.state.showReplyEmojiPicker=!0,this.state.activeEmojiCommentId=e),console.log("Reply emoji picker toggled for comment:",e,this.state.showReplyEmojiPicker),this.updateUI()}insertReplyEmoji(e,t){const n=this.elements.container.querySelector(`.inline-reply-form[data-parent-id="${e}"]`);if(!n)return;const s=n.querySelector(".inline-reply-textarea");if(!s)return;const o=s.selectionStart,i=s.selectionEnd,r=s.value.substring(0,o),a=s.value.substring(i,s.value.length);s.value=r+t+a,this.state.showReplyEmojiPicker=!1,this.state.activeEmojiCommentId=null;const l=o+t.length;s.focus(),s.selectionStart=l,s.selectionEnd=l,this.updateUI()}insertEmoji(e){if(!this.elements.commentTextarea)return;const t=this.elements.commentTextarea,n=t.selectionStart,s=t.selectionEnd,o=t.value.substring(0,n),i=t.value.substring(s,t.value.length);t.value=o+e+i,this.state.newComment.content=t.value,this.state.showMainEmojiPicker=!1,this.updateUI();const r=n+e.length;t.focus(),t.selectionStart=r,t.selectionEnd=r}}"undefined"!=typeof window&&(window.CMMVComments=CMMVComments),"undefined"!=typeof module&&module.exports&&(module.exports=CMMVComments);